
Интернет-магазин "Курский двор"

Создан полноценный интернет-магазин с следующими страницами:

• Главная

• О компании

• Каталог

• Детальная карточка товара

• Избранное

• Личный кабинет

• Оформление заказа

• Поиск

• Корзина

• Калькулятор

• Страница 404


Сайт разработан с использованием чистого JavaScript, и все библиотеки также написаны на этом языке.


▎Технические особенности:

• Верстка: Используются относительные единицы REM для основных элементов и EM в медиазапросах.

• Отступы: Реализованы с помощью псевдокласса :not(:first-child). Текстовые отступы от заголовков также определены в единицах EM, что позволяет автоматически изменять отступы при изменении размера шрифта. Межстрочный интервал (line-height) задан в процентном соотношении относительно размера шрифта.

• Адаптивная сетка: Сайт имеет резиновую адаптивную сетку, построенную на flexbox и grid-технологиях с минимальным количеством медиазапросов.

• Стиль: Используется SCSS по методологии БЭМ, что позволяет легко переиспользовать и менять местами компоненты сайта.


▎Шапка сайта:

Шапка спроектирована с гибкой архитектурой, позволяющей менять порядок элементов, а также добавлять или удалять их через административную панель CMS.


▎Анимация и функционал:

Реализована уникальная анимация добавления товара в корзину на JavaScript. При нажатии кнопки "В корзину" на карточке товара или на детальной странице, изображение товара, его название и цена плавно перемещаются в блок "Корзина" в шапке. При клике на этот блок открывается меню с превью добавленных товаров, их названиями и ценами, а также количеством. Если все товары удалены, меню скрывается до следующего добавления.

Также реализован функционал "Показать еще" на страницах "Каталог" и "Распродажа". Создан JSON-файл с товарами, и с помощью AJAX технологии дополнительные товары подгружаются без перезагрузки страницы при нажатии на кнопку "Показать еще".

Функционал перелистывания изображений в карточке товара активируется при наведении курсора на область изображения.

Иконки реализованы с использованием SVG-спрайтов и иконочных шрифтов.



Старт проекта
------------------------------------------------------------------------------------------------------------
ВНИМАНИЕ! Не используйте кириллицу в названии папок и файлов!
------------------------------------------------------------------------------------------------------------
Установка и работа с шаблоном (с правами администратора!):
В терминале:
1) npm i
2) gulp 
Шаблон начнет работать в режиме разработчика, без сжатия картинок и кода.

Когда верстка закончена и пришло время грузить на сервер/отдавать заказчику:
В новом окне терминала:
1) gulp build
Выполнится оптимизация кода и картинок. 
После завершения действий галпом, папка с результатом готова к выгрузке на сервер/передаче заказчику

Внимание! 
После выполнения gulp build создаются webp файлы картинок. Также они интегрируются в html и css. 
Следовательно, стоит проверить все ли корректно отображается и работает.
Если после выполнения gulp build файлы редактировались, действие (gulp build) нужно повторить.
------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------
Возможные проблемы и их решения:
--------------------------------------
Ошибка node-sass.
Решения:
npm rebuild node-sass
и/или
npm install sass gulp-sass --save-dev
--------------------------------------
Ошибка Pyton
Решени:
npm install --global windows-build-tools
--------------------------------------
Ошибка imagemin.
Варианты решения :
- папки и файлы должны быть названы латиницей без пробелов
- тег img и его содержимое должны быть записаны в одну строку без переносов
- в атрибуте src должен быть указан путь к существующей картинке
------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------
